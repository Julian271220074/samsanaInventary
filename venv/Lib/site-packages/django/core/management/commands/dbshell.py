import subprocess

from django.core.management.base import BaseCommand, CommandError
from django.db import DEFAULT_DB_ALIAS, connections


class Command(BaseCommand):
    help = (
        "Runs the command-line client for specified database, or the "
        "default database if none is provided."
    )

    requires_system_checks = []

    def add_arguments(self, parser):
        parser.add_argument(
<<<<<<< HEAD:venv/Lib/site-packages/django/core/management/commands/dbshell.py
            "--database",
            default=DEFAULT_DB_ALIAS,
            help=(
                "Nominates a database onto which to open a shell. Defaults to the "
                '"default" database.'
            ),
=======
            '--database', default=DEFAULT_DB_ALIAS,
            help='Nominates a database onto which to open a shell. Defaults to the "default" database.',
>>>>>>> a44fc48c1da68c7d685486a7adda0a954c3ea77c:.venv/Lib/site-packages/django/core/management/commands/dbshell.py
        )
        parameters = parser.add_argument_group('parameters', prefix_chars='--')
        parameters.add_argument('parameters', nargs='*')

    def handle(self, **options):
        connection = connections[options['database']]
        try:
            connection.client.runshell(options['parameters'])
        except FileNotFoundError:
            # Note that we're assuming the FileNotFoundError relates to the
            # command missing. It could be raised for some other reason, in
            # which case this error message would be inaccurate. Still, this
            # message catches the common case.
            raise CommandError(
                'You appear not to have the %r program installed or on your path.' %
                connection.client.executable_name
            )
        except subprocess.CalledProcessError as e:
            raise CommandError(
<<<<<<< HEAD:venv/Lib/site-packages/django/core/management/commands/dbshell.py
                '"%s" returned non-zero exit status %s.'
                % (
                    " ".join(e.cmd),
=======
                '"%s" returned non-zero exit status %s.' % (
                    ' '.join(e.cmd),
>>>>>>> a44fc48c1da68c7d685486a7adda0a954c3ea77c:.venv/Lib/site-packages/django/core/management/commands/dbshell.py
                    e.returncode,
                ),
                returncode=e.returncode,
            )
